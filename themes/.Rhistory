plots[[i]] <- mtcars %>%
filter(cyl == cyls[i]) %>%
ggplot2(aes(x = hp, y = mpg)) +
geom_point() +
ggtitle(paste('Cyl ==', cyls[i]))
}
(plots[[1]] + plots[[2]]) / plots[[3]]
for(i in seq_along(cyls)){
plots[[i]] <- mtcars %>%
filter(cyl == cyls[i]) %>%
ggplot(aes(x = hp, y = mpg)) +
geom_point() +
ggtitle(paste('Cyl ==', cyls[i]))
}
(plots[[1]] + plots[[2]]) / plots[[3]]
data(mtcars)
library(ggplot2)
library(dplyr)
library(patchwork)
plots <- vector('list', 3)
cyls <- unique(mtcars$cyl)
for(i in seq_along(cyls)){
plots[[i]] <- mtcars %>%
filter(cyl == cyls[i]) %>%
ggplot(aes(x = hp, y = mpg)) +
geom_point() +
ggtitle(paste('Cyl ==', cyls[i]))
}
class(plots[[1]])
plots[[1]]
str(plots[[1]])
?ggplot2:::`+.gg`()`
?ggplot2:::`+.gg`
help("+.gg")
base <- ggplot(mpg, aes(displ, hwy)) + geom_point()
base + geom_smooth()
base %+% subset(mpg, fl == "p") + geom_smooth()
install.packages(esquisse)
install.packages('esquisse')
library(ggthemes)
?themes
?ggthemes
library(esquisse)
?ggplot2::theme
?`ggthemes-package`
?ggtheme
help("ggtheme")
?"complete-themes"
?"complete-theme"
?scale_color_discrete
# This block is not shown and output is not printed because "include=FALSE"
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
base +
geom__smooth() +
geom_point(aes(col = factor(cyl)))
# This block is not shown and output is not printed because "include=FALSE"
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data(mtcars)
base <- ggplot(mtcars, aes(hp, mpg))
base +
geom_point(aes(col = factor(cyl))) +
scale_color_discrete(h = c(50, 150))
base +
geom__smooth() +
geom_point(aes(col = factor(cyl)))
base +
geom__smooth() +
geom_point(aes(col = factor(cyl)))
# This block is not shown and output is not printed because "include=FALSE"
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
base +
geom_smooth() +
geom_point(aes(col = factor(cyl)))
```{r pressure, fig.height=10, fig.width = 6}
```{r pressure, fig.height=10 fig.width = 6}
```{r pressure, fig.height=10 fig.width=6}
```{r pressure, fig.width = 2}
data(mtcars)
base <- ggplot(mtcars, aes(hp, mpg))
base +
geom_point(aes(col = factor(cyl))) +
scale_color_discrete(h = c(50, 150))
data(mtcars)
base <- ggplot(mtcars, aes(hp, mpg))
base +
geom_point(aes(col = factor(cyl))) +
scale_color_discrete(h = c(50, 150))
data(mtcars)
base <- ggplot(mtcars, aes(hp, mpg))
base +
geom_point(aes(col = factor(cyl))) +
scale_color_discrete(h = c(50, 150))
base +
geom_smooth() +
geom_point(aes(col = factor(cyl)))
base +
geom_smooth() +
geom_point(aes(col = factor(cyl)))
base +
geom_smooth() +
geom_point(aes(col = factor(cyl)))
f <- binomial()
f$linkfun()
ffun <- f$linkfun()
finv <- f$linkinv()
ffun <- f$linkfun
finv <- f$linkinv
ffun(0.9)
finv(0.9)
?f$linkfun()
?f$linkfun
ffun(0.05)
ffun(0.95)
qnorm(0.95)
qnorm(0.99)
qnorm(0.999)
pnorm()
pnorm(0.99)
pnorm(2.9)
pnorm(2.944439)
pnorm(2.944439) - pnorm(-2.944439)
install.packages('dlookr')
library(dlookr)
?dlookr::diagnose_category
vignette("diagonosis")
probs <- c('[0%, 10%[' = 40,
'[10%, 20%[' = 5,
'[20%, 30%[' = 6,
'[30%, 40%[' = 6,
'[40%, 50%[' = 6,
'[50%, 60%[' = 6,
'[70%, 80%[' = 6,
'[80%, 90%[' = 6,
'[90%, 100%[' = 45,
'=100%' = 6
)
sum(probs)
probs <- c('[0%, 10%[' = 40,
'[10%, 20%[' = 4,
'[20%, 30%[' = 5,
'[30%, 40%[' = 5,
'[40%, 50%[' = 5,
'[50%, 60%[' = 5,
'[70%, 80%[' = 5,
'[80%, 90%[' = 5,
'[90%, 100%[' = 45,
'=100%' = 5
)
sum(probs)
probs <- c('[0%, 10%[' = 40,
'[10%, 20%[' = 4,
'[20%, 30%[' = 5,
'[30%, 40%[' = 5,
'[40%, 50%[' = 5,
'[50%, 60%[' = 5,
'[70%, 80%[' = 5,
'[80%, 90%[' = 5,
'[90%, 100%[' = 45,
'=100%' = 5
)
probs = probs / sum(probs)
library(ggplot2)
data <- data.frame(intervals = names(probs),
levels = probs)
ggplot(data, aes(x = intervals, y = levels)) +
geom_bar()
?geom_bar
ggplot(data, aes(x = intervals, y = levels)) +
geom_col()
ggplot(data, aes(x = intervals, y = levels)) +
geom_col() +
theme(axis.x.text = element_text(angle = 90))
?theme
ggplot(data, aes(x = intervals, y = levels)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data, aes(x = intervals, y = levels)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3))
ggplot(data, aes(x = intervals, y = levels)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 3))
ggplot(data, aes(x = intervals, y = levels)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10))
data$special <- c(1, rep(0, 9))
probs <- c('[0%, 10%[' = 40,
'[10%, 20%[' = 4,
'[20%, 30%[' = 5,
'[30%, 40%[' = 5,
'[40%, 50%[' = 5,
'[50%, 60%[' = 5,
'[70%, 80%[' = 5,
'[80%, 90%[' = 5,
'[90%, 100%[' = 42.5,
'=100%' = 5
)
probs = probs / sum(probs)
library(ggplot2)
data <- data.frame(intervals = names(probs),
levels = probs)
data$special <- c(1, rep(0, 9))
ggplot(data, aes(x = intervals, y = levels, col = special)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation')
data$special <- factor(c(1, rep(0, 9)))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation')
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5)) +
theme_minimal()
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation', col = NULL) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation', col = NA) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10)) +
labs(x = 'LGD', y = 'Observation', col = 'none') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
ggplot(data, aes(x = intervals, y = levels, fill = special)) +
geom_col() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.3,
size = 10),
legend.position = 'none') +
labs(x = 'LGD', y = 'Observation') +
scale_y_continuous(breaks = seq(0, 0.5, 0.05), limits = c(0, 0.5))
install.packages('sn')
library(sn)
?sn::rsn
hist(rsn(1000, 0.9, 0.3, 0))
hist(rsn(1000, 0.9, 0.3, 0.7))
hist(rsn(1000, 0.9, 0.3, 0.9))
hist(rsn(1000, 0.9, 0.1, 0.9))
hist(rsn(1000, 0.9, 10, 0.9))
hist(rsn(1000, 0.9, 0.2, 10.9))
hist(rsn(1000, 0.9, 0.2, -10))
hist(rsn(1000, 0.9, 0.2, -1000))
?rsn
rsn(10, dp=1:3)
hist(rsn(10, dp=1:3))
hist(rsn(100, dp=1:3))
hist(rsn(10000, dp=1:3))
hist(rsn(10000, dp=1:3, tau = -100))
hist(rsn(10000, dp=1:3, tau = -1000))
WDICHN$Year <- c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012)
WDICHN$NormalizedGDP  <- c(1.20,1.32,1.45,1.64,1.93,2.25,2.71,3.50,4.52,5.00,5.93,7.32,8.23)
WDIUSA$Year <- c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012)
WDIUSA$NormalizedGDP  <- c(10.28,10.62,10.98,11.51,12.27,13.10,13.86,14.48,14.72,14.42,14.97,15.52,16.16)
WDICHN <- data.frame(Year = c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012),
NoramlizedGDP = c(1.20,1.32,1.45,1.64,1.93,2.25,2.71,3.50,4.52,5.00,5.93,7.32,8.23))
WDIUSA <- data.frame(Year = c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012),
NormalizedGDP = c(10.28,10.62,10.98,11.51,12.27,13.10,13.86,14.48,14.72,14.42,14.97,15.52,16.16))
library(car)
scatterplot(NormalizedGDP~Year,smooth=FALSE, boxplots=FALSE,ylim=range(0,20),xlim=range(2000,2030),
data=WDIUSA)
par(new=TRUE)
scatterplot(NormalizedGDP~Year,boxplots=FALSE,ylim=range(0,20),xlim=range(2000,2030),
data=WDICHN)
WDICHN <- data.frame(Year = c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012),
NormalizedGDP = c(1.20,1.32,1.45,1.64,1.93,2.25,2.71,3.50,4.52,5.00,5.93,7.32,8.23))
scatterplot(NormalizedGDP~Year,boxplots=FALSE,ylim=range(0,20),xlim=range(2000,2030),
data=WDICHN)
?scatterplot
scatterplot
car:::scatterplot.formula
car:::scatterplot.default
?loessLine
scatterplot(NormalizedGDP ~ Year,
boxplots = FALSE,
regline = FALSE,
smooth = FALSE
ylim = range(0, 20),
xlim = range(2000, 2030),
data = WDIUSA)
scatterplot(NormalizedGDP ~ Year,
boxplots = FALSE,
regline = FALSE,
smooth = FALSE,
ylim = range(0, 20),
xlim = range(2000, 2030),
data = WDIUSA)
par(new=TRUE)
WDICHN <- data.frame(Year = c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012),
NormalizedGDP = c(1.20,1.32,1.45,1.64,1.93,2.25,2.71,3.50,4.52,5.00,5.93,7.32,8.23))
WDIUSA <- data.frame(Year = c(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012),
NormalizedGDP = c(10.28,10.62,10.98,11.51,12.27,13.10,13.86,14.48,14.72,14.42,14.97,15.52,16.16))
library(car)
scatterplot(NormalizedGDP ~ Year,
boxplots = FALSE,
regline = FALSE,
smooth = FALSE,
ylim = range(0, 20),
xlim = range(2000, 2030),
data = WDIUSA)
?scatterplot
scatterplot(NormalizedGDP ~ Year,
boxplots = FALSE,
regLine = FALSE,
smooth = FALSE,
ylim = range(0, 20),
xlim = range(2000, 2030),
data = WDIUSA)
par(new=TRUE)
scatterplot(NormalizedGDP ~ Year,
boxplots = FALSE,
regLine = FALSE,
smooth = FALSE,
ylim = range(0, 20),
xlim = range(2000, 2030),
data = WDICHN)
smoothers <- lapply(list(WDICHN, WDIUSD), function(x)lm(NormalizedGDP ~ Year, data = x))
smoothers <- lapply(list(WDICHN, WDIUSA), function(x)lm(NormalizedGDP ~ Year, data = x))
regLines <- lapply(list(WDICHN, WDIUSA), function(x)loess(NormalizedGDP ~ Year, data = x))
predData <- data.frame(Year = seq(2000, 2030))
predData$USA_smooth <- predict(smoothers[[2]], newdata = predData)
predData$USA_regLine <- predict(regLines[[2]], newdata = predData)
predData$CHN_smooth <- predict(smoothers[[1]], newdata = predData)
predData$CHN_regLine <- predict(regLines[[1]], newdata = predData)
?lines
with(predData, {
lines(Year, USA_smooth)
lines(Year, CHN_smooth)
lines(Year, USA_regLines)
lines(Year, CHN_regLines)
})
with(predData, {
lines(Year, USA_smooth)
lines(Year, CHN_smooth)
lines(Year, USA_regLine)
lines(Year, CHN_regLine)
})
predData$CHN_regLine
with(predData, {
lines(Year, USA_smooth, col = 'blue')
lines(Year, CHN_smooth, col = 'blue')
lines(Year, USA_regLine, col = 'blue')
lines(Year, CHN_regLine, col = 'blue')
})
?loess
?loess.control
regLines <- lapply(list(WDICHN, WDIUSA),
function(x)loess(NormalizedGDP ~ Year, data = x, control = loess.control(surface = 'direct')))
predData <- data.frame(Year = seq(2000, 2030))
predData$USA_smooth <- predict(smoothers[[2]], newdata = predData)
predData$USA_regLine <- predict(regLines[[2]], newdata = predData)
predData$CHN_smooth <- predict(smoothers[[1]], newdata = predData)
predData$CHN_regLine <- predict(regLines[[1]], newdata = predData)
with(predData, {
lines(Year, USA_smooth, col = 'blue')
lines(Year, CHN_smooth, col = 'blue')
lines(Year, USA_regLine, col = 'blue')
lines(Year, CHN_regLine, col = 'blue')
})
commandArgs
commandArgs()
commandArgs(trailingOnly = TRUE)
library(emmea)
library(multcomp)
install.packages('multcomp')
library(multcomp)
?cld
if(requireNamespace("multcomp")) {
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
pigs.emm <- emmeans(pigs.lm, "percent", type = "response")
multcomp::cld(pigs.emm, alpha = 0.10, Letters = LETTERS)
}
data(pigs)
??pigs
install.packages('emmeans')
library(emmeans)
?emmeans
if(requireNamespace("multcomp")) {
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
pigs.emm <- emmeans(pigs.lm, "percent", type = "response")
multcomp::cld(pigs.emm, alpha = 0.10, Letters = LETTERS)
}
class(pigs.emm)
emmeans::CLD
?update.packages
install.packages('emmeans')
help(emmeans)
?install.packages
`dim<-`
?`dim<-`
apply
library(lme4)
dat3 <- read.csv('https://raw.githubusercontent.com/rnorouzian/e/master/dat3.csv')
m4 <- lmer(math~pc1+pc2+discon+(pc1+pc2+discon|id), data=dat3)
newdata <- with(dat3, expand.grid(pc1=unique(pc1), pc2=unique(pc2), discon=unique(discon)))
y <- predict(m4, newdata=newdata, re.form=NA)
plot(newdata$pc1+newdata$pc2, y)
y
m4
library(sjPlot)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'))
?plot_model
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe')
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
p.threshold = 0)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
p.threshold = 1)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
p.threshold = 0.05)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
ci.lvl = 1
p.threshold = 0.05)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
ci.lvl = 1,
p.threshold = 0.05)
plot_model(m4, type = 'pred', terms = c('pc1', 'pc2'),
pred.type = 'fe',
ci.lvl = 0,
p.threshold = 0.05)
dat3$pc2
table(dat3$pc2)
table(dat3$pc1)
library(effects)
dat2 <- read.csv('https://raw.githubusercontent.com/rnorouzian/e/master/dat2.csv')
m1 <- lmer(math ~ time1 + time2 + (time1+time2|id), data = dat2)
plot(allEffects(m1,xlevels=list(time1=0:3,time2=1:4)),rug=F)
m1
dat2
dat2$time1
dat2$time2
table(dat2$time1)
table(dat2$time2)
table(dat2$time2, dat2$time1)
table(time2 = dat2$time2, time1 =dat2$time1)
colnames(dt2)
colnames(dat2)
m2 <- lmer(mat ~ time:factor(time > 3) + time:factor(time<= 3) + (time:factor(time > 3) + time:factor(time<= 3) |  id))
m2 <- lmer(math ~ time:factor(time > 3) + time:factor(time<= 3) + (time:factor(time > 3) + time:factor(time<= 3) |  id))
m2 <- lmer(math ~ time:factor(time > 3) + time:factor(time<= 3) + (time:factor(time > 3) + time:factor(time<= 3) |  id),
data = dat2)
m1 <- lmer(math ~ time1 + time2 + (time1+time2|id), data = dat2)
?assignInMyNamespace
setwd('C:/Users/olive/Git_repos/my-blog')
library(blogdown)
build_site()
setwd('./themes')
build_site()
build_site
hugo_version()
build_site()
?build_site
build_site(method = 'custom')
build_site(method = 'custom', build_rmd = TRUE)
